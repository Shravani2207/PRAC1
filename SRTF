import java.util.Scanner;
public class Scheduling
{
    public static void main(String[] args) 
    {
        Scanner sc = new Scanner(System.in);
        int choice;
        do 
        {
            System.out.println("\nMenu:");
            System.out.println("1. Priority Scheduling");
            System.out.println("2. SRTF Scheduling");
            System.out.println("3. Exit");
            System.out.println("Enter your choice: ");
            choice = sc.nextInt();
            switch (choice) {
                case 1:
                    priorityScheduling(sc);
                    break;
                case 2:
                    srtfScheduling(sc);
                    break;
                case 3:
                    System.out.println("Exiting...");
                    break;
                default:
                    System.out.println("Invalid Choice!");
            }
        } while (choice != 3);
        sc.close();
    }
    public static void priorityScheduling(Scanner sc)
    {
        System.out.println("\nPriority Scheduling");
        System.out.println("Enter the number of processes: ");
        int n = sc.nextInt();
        int bt[] = new int[n];
        int pri[] = new int[n];
        int tat[] = new int[n];
        int wt[] = new int[n];
        int pID[] = new int[n];
        int temp;
        float avg_tat = 0, avg_wt = 0;
        for (int i = 0; i < n; i++) 
        {
            System.out.println("Enter the burst time of process " + (i + 1) + " :");
            bt[i] = sc.nextInt();
            System.out.println("Enter the time priority of process " + (i + 1) + " :");
            pri[i] = sc.nextInt();
            pID[i] = i + 1;
        }
        for (int i = 0; i < n - 1; i++) 
        {
            for (int j = 0; j < n; j++) 
            {
                if (pri[i] > pri[j]) 
                {
                    temp = pri[i];
                    pri[i] = pri[j];
                    pri[j] = temp;
                    temp = pID[i];
                    pID[i] = pID[j];
                    pID[j] = temp;
                    temp = bt[i];
                    bt[i] = bt[j];
                    bt[j] = temp;
                }
            }
        }
        wt[0] = 0;
        avg_wt = 0;
        tat[0] = bt[0];
        avg_tat = tat[0];
        for (int i = 1; i < n; i++) 
        {
            wt[i] = tat[i - 1];
            avg_wt += wt[i];
            tat[i] = bt[i] + wt[i];
            avg_tat += tat[i];
        }
        System.out.println("\nPID\tBurst\tPriority\tTAT\tWT\n");
        for (int i = 0; i < n; i++) 
        {
            System.out.println("\n" + (i + 1) + "\t" + bt[i] + "\t" + pri[i] + "\t" + tat[i] + "\t" + wt[i] + "\n");
        }
        System.out.println("Average waiting time: " + (avg_wt / n));
        System.out.println("Average turn around time: " + (avg_tat / n));
    }
    public static void srtfScheduling(Scanner sc) 
    {
        System.out.println("\nSRTF Scheduling");
        System.out.println("Enter No.of Processes:");
        int n = sc.nextInt();
        int pid[] = new int[n];
        int at[] = new int[n];
        int bt[] = new int[n];
        int ct[] = new int[n];
        int ta[] = new int[n];
        int wt[] = new int[n];
        int f[] = new int[n];
        int k[] = new int[n];
        int i, st = 0,tot=0;
float avgwt=0,avgta=0;
		for(i=0;i<n;i++)
		{
			pid[i]=i+1;
			System.out.println("Enter Process"+(i+1)+"Arrival Time:");
			at[i]=sc.nextInt();
			System.out.println("Enter Process"+(i+1)+"Burst Time:");
			bt[i]=sc.nextInt();
			k[i]=bt[i];
			f[i]=0;
		}
	while(true)
		{
		int min=99,c=n;
		if(tot==n)
		break;
		
		for(i=0;i<n;i++)
		{
			if((at[i]<=st)&&(f[i]==0)&&(bt[i]<min))
			{
				min=bt[i];
				c=i;
			}
		
		}
		if(c==n)
		st++;
		else
		{
			bt[c]--;
			st++;
			if(bt[c]==0)
			{
				ct[c]=st;
				f[c]=1;
				tot++;
			}
		}
	}
	for(i=0;i<n;i++)
	{
		ta[i]=ct[i]-at[i];
		wt[i]=ta[i]-k[i];
		avgwt += wt[i];
		avgta += ta[i];
	}
	System.out.println("pid arrival burst complete turn waiting");
	for(i=0;i<n;i++)
	{
	System.out.println(pid[i]+"\t"+at[i]+"\t"+k[i]+"\t"+ct[i]+"\t"+ta[i]+"\t"+wt[i]);
	}
	System.out.println("\n Avg Tat is:"+(float)(avgta/n));
	System.out.println("\n Avg wt is:"+(float)(avgwt/n));	
	sc.close();
	}
}
